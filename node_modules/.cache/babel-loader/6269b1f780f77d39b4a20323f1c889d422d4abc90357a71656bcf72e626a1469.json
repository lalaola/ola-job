{"ast":null,"code":"import{getAuth,createUserWithEmailAndPassword,signInWithEmailAndPassword,GoogleAuthProvider,signInWithPopup}from\"firebase/auth\";export var GET_REGIS='GET_REGIS';export var GET_LOGIN='GET_LOGIN';export var GET_LOGIN_GOOGLE='GET_LOGIN_GOOGLE';export var GET_REGIS_GOOGLE='GET_REGIS_GOOGLE';export var userLogin=function userLogin(data){var auth=getAuth();console.log('2. loading masuk action');return function(dispatch){// loading \ndispatch({type:GET_LOGIN,payload:{loading:true,data:false,errorMassage:false}});// get Api \nsignInWithEmailAndPassword(auth,data.email,data.password).then(function(userCredential){// Signed in \nvar user=userCredential.user;localStorage.setItem('user',JSON.stringify(user));dispatch({type:GET_LOGIN,payload:{loading:false,data:user,errorMassage:false}});// ...\n}).catch(function(error){console.log(\"3.gagal\");dispatch({type:GET_LOGIN,payload:{loading:false,data:false,errorMassage:error}});});};};export var googleUserRegis=function googleUserRegis(){var auth=getAuth();var provider=new GoogleAuthProvider();console.log('2. loading masuk action');return function(dispatch){// loading \ndispatch({type:GET_REGIS_GOOGLE,payload:{loading:true,data:false,errorMassage:false}});// get Api \nsignInWithPopup(auth,provider).then(function(result){var credential=GoogleAuthProvider.credentialFromResult(result);var token=credential.accessToken;var user=result.user;localStorage.setItem('user',JSON.stringify(user));dispatch({type:GET_REGIS_GOOGLE,payload:{loading:false,data:user,errorMassage:false}});}).catch(function(error){var errorCode=error.code;var errorMessage=error.message;var email=error.customData.email;var credential=GoogleAuthProvider.credentialFromError(error);// ...\n}).catch(function(error){console.log(\"3.gagal\");dispatch({type:GET_LOGIN_GOOGLE,payload:{loading:false,data:false,errorMassage:error}});});};};export var googleUserLogin=function googleUserLogin(){var auth=getAuth();var provider=new GoogleAuthProvider();console.log('2. loading masuk action');return function(dispatch){// loading \ndispatch({type:GET_LOGIN_GOOGLE,payload:{loading:true,data:false,errorMassage:false}});// get Api \nsignInWithPopup(auth,provider).then(function(result){// This gives you a Google Access Token. You can use it to access the Google API.\nvar credential=GoogleAuthProvider.credentialFromResult(result);var token=credential.accessToken;var user=result.user;localStorage.setItem('user',JSON.stringify(user));dispatch({type:GET_LOGIN_GOOGLE,payload:{loading:false,data:user,errorMassage:false}});}).catch(function(error){// Handle Errors here.\nvar errorCode=error.code;var errorMessage=error.message;// The email of the user's account used.\nvar email=error.customData.email;// The AuthCredential type that was used.\nvar credential=GoogleAuthProvider.credentialFromError(error);// ...\n}).catch(function(error){console.log(\"3.gagal\");dispatch({type:GET_LOGIN_GOOGLE,payload:{loading:false,data:false,errorMassage:error}});});};};export var userRegis=function userRegis(data){var auth=getAuth();console.log('2. loading masuk action');return function(dispatch){// loading \ndispatch({type:GET_REGIS,payload:{loading:true,data:false,errorMassage:false}});// get Api \ncreateUserWithEmailAndPassword(auth,data.email,data.password,data.displayName).then(function(userCredential){// Signed in \nvar user=userCredential.user;localStorage.setItem('user',JSON.stringify(user));dispatch({type:GET_REGIS,payload:{loading:false,data:user,errorMassage:false}});// ...\n}).catch(function(error){console.log(\"3.gagal\");dispatch({type:GET_REGIS,payload:{loading:false,data:false,errorMassage:error}});});};};","map":{"version":3,"names":["getAuth","createUserWithEmailAndPassword","signInWithEmailAndPassword","GoogleAuthProvider","signInWithPopup","GET_REGIS","GET_LOGIN","GET_LOGIN_GOOGLE","GET_REGIS_GOOGLE","userLogin","data","auth","console","log","dispatch","type","payload","loading","errorMassage","email","password","then","userCredential","user","localStorage","setItem","JSON","stringify","catch","error","googleUserRegis","provider","result","credential","credentialFromResult","token","accessToken","errorCode","code","errorMessage","message","customData","credentialFromError","googleUserLogin","userRegis","displayName"],"sources":["C:/ola/latihan/latihan react/test-api/src/redux/action/loginAction.jsx"],"sourcesContent":["import { getAuth, createUserWithEmailAndPassword,signInWithEmailAndPassword ,GoogleAuthProvider,signInWithPopup } from \"firebase/auth\";\r\nexport const GET_REGIS = 'GET_REGIS'\r\nexport const GET_LOGIN = 'GET_LOGIN'\r\nexport const GET_LOGIN_GOOGLE = 'GET_LOGIN_GOOGLE'\r\nexport const GET_REGIS_GOOGLE = 'GET_REGIS_GOOGLE'\r\n\r\nexport  const userLogin = (data) => {\r\n    const auth = getAuth();\r\n    console.log('2. loading masuk action')\r\n    return (dispatch) => {\r\n        // loading \r\n        dispatch({\r\n            type: GET_LOGIN,\r\n            payload: {\r\n                loading: true,\r\n                data: false,\r\n                errorMassage: false\r\n            }\r\n        })\r\n        // get Api \r\n        signInWithEmailAndPassword(auth, data.email, data.password)\r\n        .then((userCredential) => {\r\n          // Signed in \r\n          const user = userCredential.user;\r\n          localStorage.setItem('user', JSON.stringify(user))\r\n          dispatch({\r\n            type: GET_LOGIN,\r\n            payload: {\r\n                loading: false,\r\n                data: user,\r\n                errorMassage: false\r\n            }\r\n        })\r\n          // ...\r\n        })\r\n            .catch((error) => {\r\n                console.log(\"3.gagal\")\r\n                dispatch({\r\n                    type: GET_LOGIN,\r\n                    payload: {\r\n                        loading: false,\r\n                        data: false,\r\n                        errorMassage: error\r\n                    }\r\n                })\r\n            })\r\n    }\r\n}\r\nexport  const googleUserRegis = () => {\r\n    const auth = getAuth();\r\n    const provider = new GoogleAuthProvider();\r\n    console.log('2. loading masuk action')\r\n    return (dispatch) => {\r\n        // loading \r\n        dispatch({\r\n            type: GET_REGIS_GOOGLE,\r\n            payload: {\r\n                loading: true,\r\n                data: false,\r\n                errorMassage: false\r\n            }\r\n        })\r\n        // get Api \r\n        signInWithPopup(auth, provider)\r\n          .then((result) => {\r\n            const credential = GoogleAuthProvider.credentialFromResult(result);\r\n            const token = credential.accessToken;\r\n            const user = result.user;\r\n            localStorage.setItem('user', JSON.stringify(user))\r\n\r\n            dispatch({\r\n                type: GET_REGIS_GOOGLE,\r\n                payload: {\r\n                    loading: false,\r\n                    data: user,\r\n                    errorMassage: false\r\n                }\r\n            })\r\n          }).catch((error) => {\r\n            const errorCode = error.code;\r\n            const errorMessage = error.message;\r\n            const email = error.customData.email;\r\n            const credential = GoogleAuthProvider.credentialFromError(error);\r\n            // ...\r\n          })\r\n            .catch((error) => {\r\n                console.log(\"3.gagal\")\r\n                dispatch({\r\n                    type: GET_LOGIN_GOOGLE,\r\n                    payload: {\r\n                        loading: false,\r\n                        data: false,\r\n                        errorMassage: error\r\n                    }\r\n                })\r\n            })\r\n    }\r\n}\r\nexport  const googleUserLogin = () => {\r\n    const auth = getAuth();\r\n    const provider = new GoogleAuthProvider();\r\n    console.log('2. loading masuk action')\r\n    return (dispatch) => {\r\n        // loading \r\n        dispatch({\r\n            type: GET_LOGIN_GOOGLE,\r\n            payload: {\r\n                loading: true,\r\n                data: false,\r\n                errorMassage: false\r\n            }\r\n        })\r\n        // get Api \r\n        signInWithPopup(auth, provider)\r\n          .then((result) => {\r\n            // This gives you a Google Access Token. You can use it to access the Google API.\r\n            const credential = GoogleAuthProvider.credentialFromResult(result);\r\n            const token = credential.accessToken;\r\n            const user = result.user;\r\n            localStorage.setItem('user', JSON.stringify(user))\r\n\r\n            dispatch({\r\n                type: GET_LOGIN_GOOGLE,\r\n                payload: {\r\n                    loading: false,\r\n                    data: user,\r\n                    errorMassage: false\r\n                }\r\n            })\r\n          }).catch((error) => {\r\n            // Handle Errors here.\r\n            const errorCode = error.code;\r\n            const errorMessage = error.message;\r\n            // The email of the user's account used.\r\n            const email = error.customData.email;\r\n            // The AuthCredential type that was used.\r\n            const credential = GoogleAuthProvider.credentialFromError(error);\r\n            // ...\r\n          })\r\n            .catch((error) => {\r\n                console.log(\"3.gagal\")\r\n                dispatch({\r\n                    type: GET_LOGIN_GOOGLE,\r\n                    payload: {\r\n                        loading: false,\r\n                        data: false,\r\n                        errorMassage: error\r\n                    }\r\n                })\r\n            })\r\n    }\r\n}\r\nexport  const userRegis = (data) => {\r\n    const auth = getAuth();\r\n    console.log('2. loading masuk action')\r\n    return (dispatch) => {\r\n        // loading \r\n        dispatch({\r\n            type: GET_REGIS,\r\n            payload: {\r\n                loading: true,\r\n                data: false,\r\n                errorMassage: false\r\n            }\r\n        })\r\n        // get Api \r\n        createUserWithEmailAndPassword(auth, data.email, data.password,data.displayName)\r\n        .then((userCredential) => {\r\n          // Signed in \r\n          const user = userCredential.user;\r\n          localStorage.setItem('user', JSON.stringify(user))\r\n\r\n          dispatch({\r\n            type: GET_REGIS,\r\n            payload: {\r\n                loading: false,\r\n                data: user,\r\n                errorMassage: false\r\n            }\r\n        })\r\n          // ...\r\n        })\r\n            .catch((error) => {\r\n                console.log(\"3.gagal\")\r\n                dispatch({\r\n                    type: GET_REGIS,\r\n                    payload: {\r\n                        loading: false,\r\n                        data: false,\r\n                        errorMassage: error\r\n                    }\r\n                })\r\n            })\r\n    }\r\n}\r\n\r\n\r\n\r\n"],"mappings":"AAAA,OAASA,OAAO,CAAEC,8BAA8B,CAACC,0BAA0B,CAAEC,kBAAkB,CAACC,eAAe,KAAQ,eAAe,CACtI,MAAO,IAAMC,UAAS,CAAG,WAAW,CACpC,MAAO,IAAMC,UAAS,CAAG,WAAW,CACpC,MAAO,IAAMC,iBAAgB,CAAG,kBAAkB,CAClD,MAAO,IAAMC,iBAAgB,CAAG,kBAAkB,CAElD,MAAQ,IAAMC,UAAS,CAAG,QAAZA,UAAS,CAAIC,IAAI,CAAK,CAChC,GAAMC,KAAI,CAAGX,OAAO,EAAE,CACtBY,OAAO,CAACC,GAAG,CAAC,yBAAyB,CAAC,CACtC,MAAO,UAACC,QAAQ,CAAK,CACjB;AACAA,QAAQ,CAAC,CACLC,IAAI,CAAET,SAAS,CACfU,OAAO,CAAE,CACLC,OAAO,CAAE,IAAI,CACbP,IAAI,CAAE,KAAK,CACXQ,YAAY,CAAE,KAClB,CACJ,CAAC,CAAC,CACF;AACAhB,0BAA0B,CAACS,IAAI,CAAED,IAAI,CAACS,KAAK,CAAET,IAAI,CAACU,QAAQ,CAAC,CAC1DC,IAAI,CAAC,SAACC,cAAc,CAAK,CACxB;AACA,GAAMC,KAAI,CAAGD,cAAc,CAACC,IAAI,CAChCC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAEC,IAAI,CAACC,SAAS,CAACJ,IAAI,CAAC,CAAC,CAClDT,QAAQ,CAAC,CACPC,IAAI,CAAET,SAAS,CACfU,OAAO,CAAE,CACLC,OAAO,CAAE,KAAK,CACdP,IAAI,CAAEa,IAAI,CACVL,YAAY,CAAE,KAClB,CACJ,CAAC,CAAC,CACA;AACF,CAAC,CAAC,CACGU,KAAK,CAAC,SAACC,KAAK,CAAK,CACdjB,OAAO,CAACC,GAAG,CAAC,SAAS,CAAC,CACtBC,QAAQ,CAAC,CACLC,IAAI,CAAET,SAAS,CACfU,OAAO,CAAE,CACLC,OAAO,CAAE,KAAK,CACdP,IAAI,CAAE,KAAK,CACXQ,YAAY,CAAEW,KAClB,CACJ,CAAC,CAAC,CACN,CAAC,CAAC,CACV,CAAC,CACL,CAAC,CACD,MAAQ,IAAMC,gBAAe,CAAG,QAAlBA,gBAAe,EAAS,CAClC,GAAMnB,KAAI,CAAGX,OAAO,EAAE,CACtB,GAAM+B,SAAQ,CAAG,GAAI5B,mBAAkB,EAAE,CACzCS,OAAO,CAACC,GAAG,CAAC,yBAAyB,CAAC,CACtC,MAAO,UAACC,QAAQ,CAAK,CACjB;AACAA,QAAQ,CAAC,CACLC,IAAI,CAAEP,gBAAgB,CACtBQ,OAAO,CAAE,CACLC,OAAO,CAAE,IAAI,CACbP,IAAI,CAAE,KAAK,CACXQ,YAAY,CAAE,KAClB,CACJ,CAAC,CAAC,CACF;AACAd,eAAe,CAACO,IAAI,CAAEoB,QAAQ,CAAC,CAC5BV,IAAI,CAAC,SAACW,MAAM,CAAK,CAChB,GAAMC,WAAU,CAAG9B,kBAAkB,CAAC+B,oBAAoB,CAACF,MAAM,CAAC,CAClE,GAAMG,MAAK,CAAGF,UAAU,CAACG,WAAW,CACpC,GAAMb,KAAI,CAAGS,MAAM,CAACT,IAAI,CACxBC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAEC,IAAI,CAACC,SAAS,CAACJ,IAAI,CAAC,CAAC,CAElDT,QAAQ,CAAC,CACLC,IAAI,CAAEP,gBAAgB,CACtBQ,OAAO,CAAE,CACLC,OAAO,CAAE,KAAK,CACdP,IAAI,CAAEa,IAAI,CACVL,YAAY,CAAE,KAClB,CACJ,CAAC,CAAC,CACJ,CAAC,CAAC,CAACU,KAAK,CAAC,SAACC,KAAK,CAAK,CAClB,GAAMQ,UAAS,CAAGR,KAAK,CAACS,IAAI,CAC5B,GAAMC,aAAY,CAAGV,KAAK,CAACW,OAAO,CAClC,GAAMrB,MAAK,CAAGU,KAAK,CAACY,UAAU,CAACtB,KAAK,CACpC,GAAMc,WAAU,CAAG9B,kBAAkB,CAACuC,mBAAmB,CAACb,KAAK,CAAC,CAChE;AACF,CAAC,CAAC,CACCD,KAAK,CAAC,SAACC,KAAK,CAAK,CACdjB,OAAO,CAACC,GAAG,CAAC,SAAS,CAAC,CACtBC,QAAQ,CAAC,CACLC,IAAI,CAAER,gBAAgB,CACtBS,OAAO,CAAE,CACLC,OAAO,CAAE,KAAK,CACdP,IAAI,CAAE,KAAK,CACXQ,YAAY,CAAEW,KAClB,CACJ,CAAC,CAAC,CACN,CAAC,CAAC,CACV,CAAC,CACL,CAAC,CACD,MAAQ,IAAMc,gBAAe,CAAG,QAAlBA,gBAAe,EAAS,CAClC,GAAMhC,KAAI,CAAGX,OAAO,EAAE,CACtB,GAAM+B,SAAQ,CAAG,GAAI5B,mBAAkB,EAAE,CACzCS,OAAO,CAACC,GAAG,CAAC,yBAAyB,CAAC,CACtC,MAAO,UAACC,QAAQ,CAAK,CACjB;AACAA,QAAQ,CAAC,CACLC,IAAI,CAAER,gBAAgB,CACtBS,OAAO,CAAE,CACLC,OAAO,CAAE,IAAI,CACbP,IAAI,CAAE,KAAK,CACXQ,YAAY,CAAE,KAClB,CACJ,CAAC,CAAC,CACF;AACAd,eAAe,CAACO,IAAI,CAAEoB,QAAQ,CAAC,CAC5BV,IAAI,CAAC,SAACW,MAAM,CAAK,CAChB;AACA,GAAMC,WAAU,CAAG9B,kBAAkB,CAAC+B,oBAAoB,CAACF,MAAM,CAAC,CAClE,GAAMG,MAAK,CAAGF,UAAU,CAACG,WAAW,CACpC,GAAMb,KAAI,CAAGS,MAAM,CAACT,IAAI,CACxBC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAEC,IAAI,CAACC,SAAS,CAACJ,IAAI,CAAC,CAAC,CAElDT,QAAQ,CAAC,CACLC,IAAI,CAAER,gBAAgB,CACtBS,OAAO,CAAE,CACLC,OAAO,CAAE,KAAK,CACdP,IAAI,CAAEa,IAAI,CACVL,YAAY,CAAE,KAClB,CACJ,CAAC,CAAC,CACJ,CAAC,CAAC,CAACU,KAAK,CAAC,SAACC,KAAK,CAAK,CAClB;AACA,GAAMQ,UAAS,CAAGR,KAAK,CAACS,IAAI,CAC5B,GAAMC,aAAY,CAAGV,KAAK,CAACW,OAAO,CAClC;AACA,GAAMrB,MAAK,CAAGU,KAAK,CAACY,UAAU,CAACtB,KAAK,CACpC;AACA,GAAMc,WAAU,CAAG9B,kBAAkB,CAACuC,mBAAmB,CAACb,KAAK,CAAC,CAChE;AACF,CAAC,CAAC,CACCD,KAAK,CAAC,SAACC,KAAK,CAAK,CACdjB,OAAO,CAACC,GAAG,CAAC,SAAS,CAAC,CACtBC,QAAQ,CAAC,CACLC,IAAI,CAAER,gBAAgB,CACtBS,OAAO,CAAE,CACLC,OAAO,CAAE,KAAK,CACdP,IAAI,CAAE,KAAK,CACXQ,YAAY,CAAEW,KAClB,CACJ,CAAC,CAAC,CACN,CAAC,CAAC,CACV,CAAC,CACL,CAAC,CACD,MAAQ,IAAMe,UAAS,CAAG,QAAZA,UAAS,CAAIlC,IAAI,CAAK,CAChC,GAAMC,KAAI,CAAGX,OAAO,EAAE,CACtBY,OAAO,CAACC,GAAG,CAAC,yBAAyB,CAAC,CACtC,MAAO,UAACC,QAAQ,CAAK,CACjB;AACAA,QAAQ,CAAC,CACLC,IAAI,CAAEV,SAAS,CACfW,OAAO,CAAE,CACLC,OAAO,CAAE,IAAI,CACbP,IAAI,CAAE,KAAK,CACXQ,YAAY,CAAE,KAClB,CACJ,CAAC,CAAC,CACF;AACAjB,8BAA8B,CAACU,IAAI,CAAED,IAAI,CAACS,KAAK,CAAET,IAAI,CAACU,QAAQ,CAACV,IAAI,CAACmC,WAAW,CAAC,CAC/ExB,IAAI,CAAC,SAACC,cAAc,CAAK,CACxB;AACA,GAAMC,KAAI,CAAGD,cAAc,CAACC,IAAI,CAChCC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAEC,IAAI,CAACC,SAAS,CAACJ,IAAI,CAAC,CAAC,CAElDT,QAAQ,CAAC,CACPC,IAAI,CAAEV,SAAS,CACfW,OAAO,CAAE,CACLC,OAAO,CAAE,KAAK,CACdP,IAAI,CAAEa,IAAI,CACVL,YAAY,CAAE,KAClB,CACJ,CAAC,CAAC,CACA;AACF,CAAC,CAAC,CACGU,KAAK,CAAC,SAACC,KAAK,CAAK,CACdjB,OAAO,CAACC,GAAG,CAAC,SAAS,CAAC,CACtBC,QAAQ,CAAC,CACLC,IAAI,CAAEV,SAAS,CACfW,OAAO,CAAE,CACLC,OAAO,CAAE,KAAK,CACdP,IAAI,CAAE,KAAK,CACXQ,YAAY,CAAEW,KAClB,CACJ,CAAC,CAAC,CACN,CAAC,CAAC,CACV,CAAC,CACL,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}