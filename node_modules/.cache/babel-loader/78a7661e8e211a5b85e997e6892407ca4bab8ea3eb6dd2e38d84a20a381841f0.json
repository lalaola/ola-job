{"ast":null,"code":"var _jsxFileName = \"C:\\\\ola\\\\latihan\\\\latihan react\\\\test-api\\\\src\\\\component\\\\pagin\\\\index.jsx\";\nimport React from 'react';\nimport ReactPaginate from 'react-paginate';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Index = () => {\n  var _s = $RefreshSig$();\n  // Example items, to simulate fetching from another resources.\n  const items = [1, 2, 3, 4];\n  function Items(_ref) {\n    let {\n      currentItems\n    } = _ref;\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: currentItems && currentItems.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"Item #\", item]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 19\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 17\n      }, this))\n    }, void 0, false);\n  }\n  function PaginatedItems(_ref2) {\n    _s();\n    let {\n      itemsPerPage\n    } = _ref2;\n    // Here we use item offsets; we could also use page offsets\n    // following the API or data you're working with.\n    const [itemOffset, setItemOffset] = useState(0);\n\n    // Simulate fetching items from another resources.\n    // (This could be items from props; or items loaded in a local state\n    // from an API endpoint with useEffect and useState)\n    const endOffset = itemOffset + itemsPerPage;\n    console.log(`Loading items from ${itemOffset} to ${endOffset}`);\n    const currentItems = items.slice(itemOffset, endOffset);\n    const pageCount = Math.ceil(items.length / itemsPerPage);\n\n    // Invoke when user click to request another page.\n    const handlePageClick = event => {\n      const newOffset = event.selected * itemsPerPage % items.length;\n      console.log(`User requested page number ${event.selected}, which is offset ${newOffset}`);\n      setItemOffset(newOffset);\n    };\n  }\n  _s(PaginatedItems, \"T5lRYnT7FeIRYhFW34vLrQET4eA=\");\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"nav\", {\n      \"aria-label\": \"Page navigation example\",\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"pagination\",\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"page-item\",\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            className: \"page-link\",\n            onClick: handlePrev,\n            children: \"Previous\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 47\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"page-item\",\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            className: \"page-link\",\n            children: \"1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 47\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"page-item\",\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            className: \"page-link\",\n            children: \"2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 47\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"page-item\",\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            className: \"page-link\",\n            children: \"3\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 47\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"page-item\",\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            className: \"page-link\",\n            onClick: handleNext,\n            children: \"Next\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 47\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 14\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n};\n_c = Index;\nexport default Index;\nvar _c;\n$RefreshReg$(_c, \"Index\");","map":{"version":3,"names":["React","ReactPaginate","Index","items","Items","currentItems","map","item","PaginatedItems","itemsPerPage","itemOffset","setItemOffset","useState","endOffset","console","log","slice","pageCount","Math","ceil","length","handlePageClick","event","newOffset","selected","handlePrev","handleNext"],"sources":["C:/ola/latihan/latihan react/test-api/src/component/pagin/index.jsx"],"sourcesContent":["import React from 'react';\r\nimport ReactPaginate from 'react-paginate';\r\n\r\nconst Index = () => {\r\n    // Example items, to simulate fetching from another resources.\r\n    const items = [1, 2, 3, 4];\r\n    function Items({ currentItems }) {\r\n        return (\r\n          <>\r\n            {currentItems &&\r\n              currentItems.map((item) => (\r\n                <div>\r\n                  <h3>Item #{item}</h3>\r\n                </div>\r\n              ))}\r\n          </>\r\n        );\r\n      }\r\n    function PaginatedItems({ itemsPerPage }) {\r\n        // Here we use item offsets; we could also use page offsets\r\n        // following the API or data you're working with.\r\n        const [itemOffset, setItemOffset] = useState(0);\r\n      \r\n        // Simulate fetching items from another resources.\r\n        // (This could be items from props; or items loaded in a local state\r\n        // from an API endpoint with useEffect and useState)\r\n        const endOffset = itemOffset + itemsPerPage;\r\n        console.log(`Loading items from ${itemOffset} to ${endOffset}`);\r\n        const currentItems = items.slice(itemOffset, endOffset);\r\n        const pageCount = Math.ceil(items.length / itemsPerPage);\r\n      \r\n        // Invoke when user click to request another page.\r\n        const handlePageClick = (event) => {\r\n          const newOffset = (event.selected * itemsPerPage) % items.length;\r\n          console.log(\r\n            `User requested page number ${event.selected}, which is offset ${newOffset}`\r\n          );\r\n          setItemOffset(newOffset);\r\n        };\r\n    }\r\n    return (\r\n        <div>\r\n             <nav aria-label=\"Page navigation example\">\r\n                <ul className=\"pagination\">\r\n                    <li className=\"page-item\"><a className=\"page-link\" onClick={handlePrev} >Previous</a></li>\r\n                    <li className=\"page-item\"><a className=\"page-link\" >1</a></li>\r\n                    <li className=\"page-item\"><a className=\"page-link\" >2</a></li>\r\n                    <li className=\"page-item\"><a className=\"page-link\" >3</a></li>\r\n                    <li className=\"page-item\"><a className=\"page-link\"onClick={handleNext} >Next</a></li>\r\n                </ul>\r\n            </nav>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Index;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,aAAa,MAAM,gBAAgB;AAAC;AAAA;AAE3C,MAAMC,KAAK,GAAG,MAAM;EAAA;EAChB;EACA,MAAMC,KAAK,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;EAC1B,SAASC,KAAK,OAAmB;IAAA,IAAlB;MAAEC;IAAa,CAAC;IAC3B,oBACE;MAAA,UACGA,YAAY,IACXA,YAAY,CAACC,GAAG,CAAEC,IAAI,iBACpB;QAAA,uBACE;UAAA,WAAI,QAAM,EAACA,IAAI;QAAA;UAAA;UAAA;UAAA;QAAA;MAAM;QAAA;QAAA;QAAA;MAAA,QAExB;IAAC,iBACH;EAEP;EACF,SAASC,cAAc,QAAmB;IAAA;IAAA,IAAlB;MAAEC;IAAa,CAAC;IACpC;IACA;IACA,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGC,QAAQ,CAAC,CAAC,CAAC;;IAE/C;IACA;IACA;IACA,MAAMC,SAAS,GAAGH,UAAU,GAAGD,YAAY;IAC3CK,OAAO,CAACC,GAAG,CAAE,sBAAqBL,UAAW,OAAMG,SAAU,EAAC,CAAC;IAC/D,MAAMR,YAAY,GAAGF,KAAK,CAACa,KAAK,CAACN,UAAU,EAAEG,SAAS,CAAC;IACvD,MAAMI,SAAS,GAAGC,IAAI,CAACC,IAAI,CAAChB,KAAK,CAACiB,MAAM,GAAGX,YAAY,CAAC;;IAExD;IACA,MAAMY,eAAe,GAAIC,KAAK,IAAK;MACjC,MAAMC,SAAS,GAAID,KAAK,CAACE,QAAQ,GAAGf,YAAY,GAAIN,KAAK,CAACiB,MAAM;MAChEN,OAAO,CAACC,GAAG,CACR,8BAA6BO,KAAK,CAACE,QAAS,qBAAoBD,SAAU,EAAC,CAC7E;MACDZ,aAAa,CAACY,SAAS,CAAC;IAC1B,CAAC;EACL;EAAC,GArBQf,cAAc;EAsBvB,oBACI;IAAA,uBACK;MAAK,cAAW,yBAAyB;MAAA,uBACtC;QAAI,SAAS,EAAC,YAAY;QAAA,wBACtB;UAAI,SAAS,EAAC,WAAW;UAAA,uBAAC;YAAG,SAAS,EAAC,WAAW;YAAC,OAAO,EAAEiB,UAAW;YAAA,UAAE;UAAQ;YAAA;YAAA;YAAA;UAAA;QAAI;UAAA;UAAA;UAAA;QAAA,QAAK,eAC1F;UAAI,SAAS,EAAC,WAAW;UAAA,uBAAC;YAAG,SAAS,EAAC,WAAW;YAAA,UAAE;UAAC;YAAA;YAAA;YAAA;UAAA;QAAI;UAAA;UAAA;UAAA;QAAA,QAAK,eAC9D;UAAI,SAAS,EAAC,WAAW;UAAA,uBAAC;YAAG,SAAS,EAAC,WAAW;YAAA,UAAE;UAAC;YAAA;YAAA;YAAA;UAAA;QAAI;UAAA;UAAA;UAAA;QAAA,QAAK,eAC9D;UAAI,SAAS,EAAC,WAAW;UAAA,uBAAC;YAAG,SAAS,EAAC,WAAW;YAAA,UAAE;UAAC;YAAA;YAAA;YAAA;UAAA;QAAI;UAAA;UAAA;UAAA;QAAA,QAAK,eAC9D;UAAI,SAAS,EAAC,WAAW;UAAA,uBAAC;YAAG,SAAS,EAAC,WAAW;YAAA,OAAO,EAAEC,UAAW;YAAA,UAAE;UAAI;YAAA;YAAA;YAAA;UAAA;QAAI;UAAA;UAAA;UAAA;QAAA,QAAK;MAAA;QAAA;QAAA;QAAA;MAAA;IACpF;MAAA;MAAA;MAAA;IAAA;EACH;IAAA;IAAA;IAAA;EAAA,QACJ;AAEd,CAAC;AAAA,KAlDKxB,KAAK;AAoDX,eAAeA,KAAK;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}