{"ast":null,"code":"var _jsxFileName = \"C:\\\\ola\\\\latihan\\\\latihan react\\\\test-api\\\\src\\\\component\\\\pagin\\\\index.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport ReactPaginate from 'react-paginate';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Index = () => {\n  _s();\n  const items = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14];\n  function Items(_ref) {\n    let {\n      currentItems\n    } = _ref;\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: currentItems && currentItems.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"Item #\", item]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 15\n      }, this))\n    }, void 0, false);\n  }\n  const itemsPerPage = 6;\n  const [itemOffset, setItemOffset] = useState(0);\n  const endOffset = itemOffset + itemsPerPage;\n  const currentItems = items.slice(itemOffset, endOffset);\n  const pageCount = Math.ceil(items.length / itemsPerPage);\n  const handlePageClick = event => {\n    const newOffset = event.selected * itemsPerPage % items.length;\n    console.log(`User requested page number ${event.selected}, which is offset ${newOffset}`);\n    setItemOffset(newOffset);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Items, {\n      currentItems: currentItems\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ReactPaginate, {\n      breakLabel: \"...\",\n      nextLabel: \"next >\",\n      onPageChange: handlePageClick,\n      pageRangeDisplayed: 5,\n      pageCount: pageCount,\n      previousLabel: \"< previous\",\n      renderOnZeroPageCount: null\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n_s(Index, \"T5lRYnT7FeIRYhFW34vLrQET4eA=\");\n_c = Index;\nexport default Index;\nvar _c;\n$RefreshReg$(_c, \"Index\");","map":{"version":3,"names":["React","useState","ReactPaginate","Index","items","Items","currentItems","map","item","itemsPerPage","itemOffset","setItemOffset","endOffset","slice","pageCount","Math","ceil","length","handlePageClick","event","newOffset","selected","console","log"],"sources":["C:/ola/latihan/latihan react/test-api/src/component/pagin/index.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport ReactPaginate from 'react-paginate';\r\n\r\nconst Index = () => {\r\n    const items = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14];\r\n\r\n    function Items({ currentItems }) {\r\n      return (\r\n        <>\r\n          {currentItems &&\r\n            currentItems.map((item) => (\r\n              <div>\r\n                <h3>Item #{item}</h3>\r\n              </div>\r\n            ))}\r\n        </>\r\n      );\r\n    }\r\n    const itemsPerPage = 6\r\n    const [itemOffset, setItemOffset] = useState(0);\r\n    const endOffset = itemOffset + itemsPerPage;\r\n    const currentItems = items.slice(itemOffset, endOffset);\r\n    const pageCount = Math.ceil(items.length / itemsPerPage);\r\n\r\n    const handlePageClick = (event) => {\r\n        const newOffset = (event.selected * itemsPerPage) % items.length;\r\n        console.log(\r\n            `User requested page number ${event.selected}, which is offset ${newOffset}`\r\n        );\r\n        setItemOffset(newOffset);\r\n    };\r\n\r\n    return (\r\n        <>  \r\n            <Items currentItems={currentItems} />\r\n            <ReactPaginate\r\n                breakLabel=\"...\"\r\n                nextLabel=\"next >\"\r\n                onPageChange={handlePageClick}\r\n                pageRangeDisplayed={5}\r\n                pageCount={pageCount}\r\n                previousLabel=\"< previous\"\r\n                renderOnZeroPageCount={null}\r\n            />\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Index;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,aAAa,MAAM,gBAAgB;AAAC;AAAA;AAE3C,MAAMC,KAAK,GAAG,MAAM;EAAA;EAChB,MAAMC,KAAK,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;EAE7D,SAASC,KAAK,OAAmB;IAAA,IAAlB;MAAEC;IAAa,CAAC;IAC7B,oBACE;MAAA,UACGA,YAAY,IACXA,YAAY,CAACC,GAAG,CAAEC,IAAI,iBACpB;QAAA,uBACE;UAAA,WAAI,QAAM,EAACA,IAAI;QAAA;UAAA;UAAA;UAAA;QAAA;MAAM;QAAA;QAAA;QAAA;MAAA,QAExB;IAAC,iBACH;EAEP;EACA,MAAMC,YAAY,GAAG,CAAC;EACtB,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGV,QAAQ,CAAC,CAAC,CAAC;EAC/C,MAAMW,SAAS,GAAGF,UAAU,GAAGD,YAAY;EAC3C,MAAMH,YAAY,GAAGF,KAAK,CAACS,KAAK,CAACH,UAAU,EAAEE,SAAS,CAAC;EACvD,MAAME,SAAS,GAAGC,IAAI,CAACC,IAAI,CAACZ,KAAK,CAACa,MAAM,GAAGR,YAAY,CAAC;EAExD,MAAMS,eAAe,GAAIC,KAAK,IAAK;IAC/B,MAAMC,SAAS,GAAID,KAAK,CAACE,QAAQ,GAAGZ,YAAY,GAAIL,KAAK,CAACa,MAAM;IAChEK,OAAO,CAACC,GAAG,CACN,8BAA6BJ,KAAK,CAACE,QAAS,qBAAoBD,SAAU,EAAC,CAC/E;IACDT,aAAa,CAACS,SAAS,CAAC;EAC5B,CAAC;EAED,oBACI;IAAA,wBACI,QAAC,KAAK;MAAC,YAAY,EAAEd;IAAa;MAAA;MAAA;MAAA;IAAA,QAAG,eACrC,QAAC,aAAa;MACV,UAAU,EAAC,KAAK;MAChB,SAAS,EAAC,QAAQ;MAClB,YAAY,EAAEY,eAAgB;MAC9B,kBAAkB,EAAE,CAAE;MACtB,SAAS,EAAEJ,SAAU;MACrB,aAAa,EAAC,YAAY;MAC1B,qBAAqB,EAAE;IAAK;MAAA;MAAA;MAAA;IAAA,QAC9B;EAAA,gBACH;AAEX,CAAC;AAAA,GA3CKX,KAAK;AAAA,KAALA,KAAK;AA6CX,eAAeA,KAAK;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}